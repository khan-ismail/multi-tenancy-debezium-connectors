services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092" # External access
      - "29092:29092" # Internal access
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 4194304
      KAFKA_REPLICA_FETCH_MAX_BYTES: 4194304
      KAFKA_MAX_REQUEST_SIZE: 4194304
      KAFKA_REQUEST_TIMEOUT_MS: 40000
      KAFKA_REPLICA_SOCKET_TIMEOUT_MS: 40000
    healthcheck:
      test: ["CMD-SHELL", "echo > /dev/tcp/localhost/9092"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - kafka-network

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    environment:
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: root
      CLICKHOUSE_DEFAULT_MAX_QUERY_SIZE: 4194304
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8123/ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - kafka-network

  kafka-connect:
    image: debezium/connect:2.6
    container_name: kafka-connect
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      CONNECT_PRODUCER_MAX_REQUEST_SIZE: 4194304
      CONNECT_PRODUCER_BUFFER_MEMORY: 67108864
      CONNECT_PRODUCER_COMPRESSION_TYPE: snappy
      CONNECT_CONSUMER_FETCH_MAX_BYTES: 4194304
      CONNECT_CONSUMER_MAX_PARTITION_FETCH_BYTES: 4194304
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: connect-cluster
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_LOG4J_ROOT_LOGLEVEL: DEBUG
      CONNECT_HEAP_OPTS: "-Xms1G -Xmx2G"
      CONNECT_PLUGIN_PATH: /usr/share/java,/kafka/connect,/usr/share/confluent-hub-components
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_CLUSTERS_0_KAFKA_CONNECT_0_NAME: connect
      KAFKA_CLUSTERS_0_KAFKA_CONNECT_0_ADDRESS: http://kafka-connect:8083
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
